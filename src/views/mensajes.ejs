<!DOCTYPE html>
<html lang="es">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Mensajes</title>
    <!-- Enlace a Bootstrap 5 CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <%- include('partials/nav-buttons')%>
</head>

<body class="d-flex flex-column min-vh-100">

    <div class="d-flex">
        <%- include('partials/nav-bar')%>
            <!-- Contenido principal -->
            <div class="content flex-fill">
                <!-- Encabezado superior -->
                <header class="upperNav bg-white p-3 shadow-sm">
                    <div id="buscar" class="d-flex justify-content-end gap-2">
                        <input type="text" class="form-control" placeholder="Buscar mensaje...">
                        <button class="btn btn-outline-secondary">游댌</button>
                    </div>
                </header>

                <div class="mensajesContainer d-flex p-4 gap-4" style="height: 90vh;">
                    <!-- Lista de conversaciones -->
                    <div class="container-fluid h-100">
                        <div class="row h-100">
                            <div class="col-md-3 p-3 bg-light" style="border-right: 1px solid #dee2e6;">
                                <div class="d-flex flex-column h-100">
                                    <!-- Secci칩n de Amigos -->
                                    <div class="friends-section bg-white p-3 rounded shadow-sm mb-3 flex-grow-1"
                                        style="overflow-y: auto;">
                                        <h3 class="mb-3">Amigos</h3>
                                        <% friends.forEach(friend=> {
                                            %>
                                            <button
                                                class="friends btn btn-light w-100 d-flex justify-content-between align-items-center p-3 mb-2 shadow-sm rounded sendBtn"
                                                type="submit"
                                                onclick="document.getElementById('nombreContacto').innerText = this.querySelector('#nombre-amigo').innerText"
                                                data-id="<%= friend.id_usuario %>">
                                                <span id="nombre-amigo">
                                                    <%= friend.nombre %>
                                                </span>
                                            </button>
                                            <% }) %>
                                    </div>

                                    <!-- Secci칩n de Equipos -->
                                    <div class="teams-section bg-white p-3 rounded shadow-sm flex-grow-1"
                                        style="overflow-y: auto;">
                                        <h3 class="mb-3">Equipos</h3>
                                        <% teams.forEach(team=>{ %>
                                            <button
                                                class="btn btn-light w-100 d-flex justify-content-between align-items-center p-3 mb-2 shadow-sm rounded sendBtn"
                                                type="submit"
                                                onclick="document.getElementById('nombreContacto').innerText = this.querySelector('#nombre-equipo').innerText"
                                                data-id="<%= team.id_equipo %>">
                                                <span id="nombre-equipo">
                                                    <%= team.nombre_equipo %>
                                                </span>
                                            </button>
                                            <% }) %>
                                    </div>
                                </div>
                            </div>

                            <!-- Columna del chat principal -->
                            <div class="col-md-9 p-0 d-flex flex-column" style="height: 90vh;">
                                <div class="chat flex-fill bg-white d-flex flex-column">
                                    <!-- Cabecera del chat -->
                                    <div class="chat-header text-center bg-dark text-white p-3">
                                        <h3 id="nombreContacto" class="m-0">-------</h3>
                                    </div>

                                    <!-- 츼rea de mensajes -->
                                    <div class="chat-messages flex-fill d-flex flex-column gap-3 p-4 overflow-auto"
                                        id="mensajes" style="height: 100px; overflow-y: auto;">
                                        <div class="welcome-message text-center p-4">
                                            <i class="bi bi-chat-dots-fill fs-1 text-muted"></i>
                                            <h3 class="fw-bold mt-3">Empieza una conversaci칩n</h3>
                                            <p class="text-muted">Selecciona un contacto o equipo para comenzar a
                                                chatear</p>
                                        </div>
                                    </div>

                                    <!-- Input para enviar mensajes -->
                                    <div class="chat-input p-3 bg-light border-top">
                                        <form class="d-flex" id="formMensaje">
                                            <input type="text" id="mensajeInput" class="form-control rounded-pill"
                                                placeholder="Escribe un mensaje..." autocomplete="off">
                                            <button type="submit" id="enviarMensaje" class="btn btn-primary ms-2">
                                                <i class="bi bi-send-fill">Enviar</i>
                                            </button>
                                            <input type="file" id="fileInput" />
                                            <button id="archivo" class="btn btn-outline-danger ms-2"
                                                onclick="uploadFile()">
                                                <i class="bi bi-power">.</i>
                                            </button>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                </div>
            </div>
    </div>

    <script src="/socket.io/socket.io.js"></script>
    <script>
        let currentRoomId = 0;
        const socket = io({
            auth: {
                serverOffset: 0,
                userName: '<%= user[0].nombre %>',
                userId: '<%= user[0].id_usuario %>',
                roomId: currentRoomId
            }
        });

        // Seleccionar todos los elementos de contactos
        const friendItems = document.querySelectorAll(".sendBtn");

        friendItems.forEach(item => {
            item.addEventListener('click', () => {
                let contactId = item.dataset.id;
                const currentUserId = '<%= user[0].id_usuario %>';

                // Emitir evento para iniciar chat
                socket.emit('start-chat', contactId, currentUserId);
            });
        });


        //// a futuro aqui se pondia para configurar el estado online o offline
        socket.on('online', (userId) => {
            setUserStatus(userId, true);
        });

        socket.on('offline', (userId) => {
            setUserStatus(userId, false);
        });

        function setUserStatus(userId, online) {
            const buttons = document.querySelectorAll('.friends');


            buttons.forEach((button) => {
                if (button.dataset.id == userId) {
                    if (online) {
                        button.style.border = '2px solid green'; // Borde verde cuando est치 en l칤nea
                    } else {
                        button.style.border = 'none'; // Borde gris cuando est치 desconectado
                    }
                }
            });
        }



        socket.on('chat-started', (previusMessages, roomId) => {
            currentRoomId = roomId;
            console.log('Chat inicia');

            const mensajes = document.getElementById('mensajes');
            mensajes.innerHTML = ``;

            previusMessages.forEach(msg => {

                if (!msg.multimedia) {
                    const nuevoMensaje = document.createElement('div');
                    nuevoMensaje.innerHTML = `
                                            <div class="message-container d-flex mb-3 ">
                                                <div style="max-width: 80%;">
                                                    <div class="d-flex justify-content-between align-items-center mb-1">
                                                    <strong>${msg.nombre}</strong>
                                                    </div>
                                                    <p class="mb-1">${msg.contenido}</p>
                                                    <small class="text-muted">${msg.fecha_envio}</small>
                                                </div>
                                            </div>
                                        `;
                    mensajes.appendChild(nuevoMensaje);
                    mensajes.scrollTop = mensajes.scrollHeight;
                } else {
                    const nuevoMensaje = document.createElement('div');
                    nuevoMensaje.innerHTML = `
                                <div class="card shadow-sm mb-3 border-0">
                                    <div class="card-body p-3">
                                        <div class="d-flex flex-column">
                                        <div class="d-flex align-items-center mb-2">
                                            <strong class="me-auto">${msg.nombre}</strong>
                                            <small class="text-muted">${msg.fecha_envio}</small>
                                        </div>
                                        <div class="message-content">
                                            <img src="${msg.multimedia}" class="img-fluid rounded mb-2" style="max-width: 300px;" alt="Sent image">
                                        </div>
                                        </div>
                                    </div>
                                </div>
                            `;
                    mensajes.appendChild(nuevoMensaje);
                    mensajes.scrollTop = mensajes.scrollHeight;

                }


            });
        });


        const mensajeInput = document.getElementById('mensajeInput');
        const mensajeForm = document.getElementById('formMensaje');

        mensajeForm.addEventListener('submit', async (e) => {
            e.preventDefault();

            if (mensajeInput.value) {
                socket.emit('chat message', mensajeInput.value, currentRoomId);
                mensajeInput.value = '';
                mensajeInput.focus();
            }
        });

        const mensajes = document.getElementById('mensajes');

        socket.on('chat message', (msg, serverOffset, fecha, username) => {

            const nuevoMensaje = document.createElement('div');
            nuevoMensaje.innerHTML = `
                                            <div class="message-container d-flex mb-3">
                                                <div style="max-width: 80%;">
                                                    <div class="d-flex justify-content-between align-items-center mb-1">
                                                    <strong>${username}</strong>
                                                    </div>
                                                    <p class="mb-1">${msg}</p>
                                                    <small class="text-muted">${fecha}</small>
                                                </div>
                                            </div>
                                        `;
            mensajes.appendChild(nuevoMensaje);
            mensajes.scrollTop = mensajes.scrollHeight;
            socket.auth.serverOffset = serverOffset;

        });


        // en teoria no se utiliza, porque aqui no se recibe lo que es el mensaje con multimedia
        // socket.on('chat message file', (serverOffset, fecha, username, file) => {

        //     const nuevoMensaje = document.createElement('div');
        //     nuevoMensaje.classList.add('mensaje', 'bg-gray-500', 'text-black', 'p-2', 'rounded', 'd-flex', 'flex-column');
        //     nuevoMensaje.innerHTML = `
        //                         <li class"bg-gray-500 text-black p-2 rounded">
        //                             <strong>${username}</strong> 
        //                             <img src="${file}" width="200"/>
        //                             <small>${fecha}</small>
        //                         </li>
        //                     `;
        //     mensajes.appendChild(nuevoMensaje);
        //     mensajes.scrollTop = mensajes.scrollHeight;
        //     socket.auth.serverOffset = serverOffset;

        // });


        /////////////////// Subir archivos multimedia

        socket.on('fileMessage', (data) => {
            const li = document.createElement('div');
            console.log(data.url);

            if (data.type === 'image') {
                li.innerHTML = `<div class="card shadow-sm mb-3 border-0">
                                    <div class="card-body p-3">
                                        <div class="d-flex flex-column">
                                        <div class="d-flex align-items-center mb-2">
                                            <strong class="me-auto">${data.nombre}</strong>
                                            <small class="text-muted">${data.fecha}</small>
                                        </div>
                                        <div class="message-content">
                                            <img src="${data.url}" class="img-fluid rounded mb-2" style="max-width: 300px;" alt="Sent image">
                                        </div>
                                        </div>
                                    </div>
                                </div>`
            } else if (data.format === 'pdf') {
                li.innerHTML = `< iframe src = "${data.url}" width = "300" height = "400" ></ > `;
            } else {
                li.innerHTML = `< a href = "${data.url}" target = "_blank" >游늯 Ver archivo</ >`;
            }
            mensajes.appendChild(li);
        });


        async function uploadFile() {
            const input = document.getElementById('fileInput');
            const file = input.files[0];
            if (!file) return alert('Selecciona un archivo');

            const formData = new FormData();
            formData.append('file', file);
            formData.append('userId', '<%= user[0].id_usuario %>');
            formData.append('roomId', currentRoomId);

            const response = await fetch('/upload', {
                method: 'POST',
                body: formData
            });


            const data = await response.json();

            input.value = null;
        }


        /////// Logout
        document.getElementById('logout').addEventListener('click', () => {
            document.cookie = 'jwt=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;';
            window.location.href = '/login';
        });


    </script>

</body>

</html