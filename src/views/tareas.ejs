<!DOCTYPE html>
<html lang="es">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Tareas</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="../CSS/home.css">
    <%- include('partials/nav-buttons')%>
        <style>
            /* Estilos adicionales para la p치gina de tareas */

            /* Estilos para las tarjetas de tareas */
            .list-group-item {
                transition: all 0.3s ease;
                border-left: 3px solid transparent;
            }

            .list-group-item:hover {
                background-color: #f8f9fa;
            }

            /* Colores para las prioridades */
            .list-group-item:has(.badge.bg-danger) {
                border-left-color: #dc3545;
            }

            .list-group-item:has(.badge.bg-warning) {
                border-left-color: #ffc107;
            }

            .list-group-item:has(.badge.bg-info) {
                border-left-color: #17a2b8;
            }

            /* Estilo para tareas completadas */
            .text-decoration-line-through {
                color: #6c757d;
            }

            /* Estilo para la barra de progreso */
            .progress {
                height: 1.5rem;
                border-radius: 0.5rem;
            }

            /* Animaci칩n para la barra de progreso */
            .progress-bar {
                transition: width 0.6s ease;
            }

            /* Estilo para recompensas */
            .list-group-item .badge {
                font-size: 0.8rem;
            }

            /* Estilo para botones de acci칩n */
            .btn-outline-primary,
            .btn-outline-danger {
                border-width: 1px;
            }

            /* Mejoras responsivas */
            @media (max-width: 768px) {
                .card-header {
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                }

                .d-flex.justify-content-between.align-items-center {
                    flex-direction: column;
                    align-items: flex-start !important;
                }

                .d-flex.justify-content-between.align-items-center div {
                    margin-top: 0.5rem;
                }
            }
        </style>
</head>

<body class="d-flex" data-user-id="<%= user.id_usuario %>" data-user-name="<%= user.nombre %>">

    <%- include('partials/nav-bar')%>

        <div class="flex-grow-1">
            <header class="bg-light p-3 d-flex justify-content-between align-items-center">
                <h1 class="h5 m-0">Tareas</h1>
                </p>
                <div class="d-flex align-items-center gap-2">
                    <input type="text" class="form-control" id="searchTasks" placeholder="Buscar tareas..."
                        style="max-width: 300px;">
                    <button class="btn btn-outline-secondary">游댌</button>
                </div>
            </header>

            <div class="container-fluid p-4">
                <!-- Barra de progreso y recompensas -->
                <div class="row mb-4">
                    <div class="col-md-8">
                        <div class="card">
                            <div class="card-header d-flex justify-content-between align-items-center">
                                <span>Progreso de tareas</span>
                                <span id="progressPercentage"><%= puntaje %></span>
                            </div>
                            <div class="card-body">
                                <div class="progress mb-2">
                                    <div class="progress-bar bg-success" role="progressbar" style="width: <%= puntaje %>%"
                                        aria-valuenow="<%= puntaje %>" aria-valuemin="0" aria-valuemax="100"></div>
                                </div>
                                <div class="d-flex justify-content-between">
                                    <span>Puntos acumulados: <%= puntaje %></span>
                                    <!-- <span>Tareas completadas: 3/12</span> -->
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="card">
                            
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-4">
                        <!-- Formulario para agregar/editar tareas -->
                        <div class="card mb-4">
                            <div class="card-header">Nueva Tarea</div>
                            <div class="card-body">
                                <form id="taskForm">
                                    <div class="mb-3">
                                        <label for="taskTitle" class="form-label">T칤tulo</label>
                                        <input type="text" class="form-control" id="taskTitle">
                                    </div>
                                    <div class="mb-3">
                                        <label for="taskDescription" class="form-label">Descripci칩n</label>
                                        <textarea class="form-control" id="taskDescription" rows="3"></textarea>
                                    </div>
                                    <div class="mb-3">
                                        <label for="taskDueDate" class="form-label">Fecha l칤mite</label>
                                        <input type="date" class="form-control" id="taskDueDate">
                                    </div>
                                    <div class="mb-3">
                                        <label for="taskPriority" class="form-label">Prioridad</label>
                                        <select class="form-select" id="taskPriority">
                                            <option value="baja">Baja</option>
                                            <option value="media" selected>Media</option>
                                            <option value="alta">Alta</option>
                                        </select>
                                    </div>
                                    <button class="btn btn-primary w-100">Guardar</button>
                                </form>
                            </div>
                        </div>
                    </div>

                    <!-- Lista de tareas -->
                    <section class="col-md-8">
                        <div class="card">
                            <div class="card-header d-flex justify-content-between align-items-center">
                                <span>Mis Tareas</span>
                                <!-- <button class="btn btn-sm btn-outline-danger">Limpiar completadas</button> -->
                            </div>
                            <div class="card-body">
                                <div class="list-group" >

                                    <%  tareas.forEach(tarea => { %>
                                    <div class="list-group-item list-group-item-action tarea">
                                        <div class="d-flex w-100 justify-content-between align-items-start mb-2">
                                            <div class="form-check">
                                                <input class="form-check-input" style="cursor: pointer;"  type="checkbox" <%= tarea.cheked == 1 ? 'checked' : '' %> onchange="handleTareaCompletada(this.checked, '<%= tarea.id_tarea %>')" />
                                                <% if(tarea.cheked == 1) {%>
                                                    <h5 class="mb-1 tarea-titulo" data-id="<%= tarea.id_tarea %>" style="text-decoration: line-through !important"><%= tarea.titulo %></h5>
                                                <% } else {%>
                                                    <h5 class="mb-1 tarea-titulo" data-id="<%= tarea.id_tarea %>"><%= tarea.titulo %></h5>
                                                <% } %>
                                            </div>
                                            <span class="badge bg-info text-white"><%= tarea.prioridad %></span>
                                        </div>
                                        <p class="mb-1"><%= tarea.descripcion %></p>
                                        <div class="d-flex justify-content-between align-items-center">
                                            <small class="text-muted">Fecha l칤mite: <%= tarea.fecha_limite %></small>
                                            <div>
                                                <button class="btn btn-sm btn-outline-primary" data-id="<%= tarea.id_tarea %>" id="editar-tarea" onclick={console.log(this.dataset.id)}>Editar</button>
                                                <button class="btn btn-sm btn-outline-danger" data-id="<%= tarea.id_tarea %>" id="eliminar-tarea" onclick=handleEliminarTarea(this.dataset.id)>Eliminar</button>
                                            </div>
                                        </div>
                                    </div>
                                    <%  })  %>

                                </div>
                            </div>
                        </div>
                    </section>
                </div>
            </div>
        </div>

        <script src="/socket.io/socket.io.js"></script>
        <script type="module" src="/js/tareas.js"></script>
        <script>
            document.getElementById('taskForm').addEventListener('submit', (e) => {
                e.preventDefault();
                const taskOpt = {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'Application/json'
                    },
                    body: JSON.stringify({
                        title: document.getElementById('taskTitle').value,
                        description: document.getElementById('taskDescription').value,
                        dueDate: document.getElementById('taskDueDate').value,
                        priority: document.getElementById('taskPriority').value
                    })
                }

                fetch('/tareas', taskOpt)
                .then(res => res.json())
                .then(data => {
                    if(data.status === 'ok') {
                        window.location.href = data.redirect;
                    }else {
                        alert('Ha ocurrido un error')
                    }

                })
            })

            const handleEliminarTarea = (taskId) => {
                fetch('/tareas', {
                    method: 'DELETE',
                    headers: {
                        'Content-Type': 'Application/json'
                    },
                    body: JSON.stringify({
                        taskId: taskId
                    })
                })
                .then(res => res.json())
                .then(data => { 
                    window.location.href = data.redirect;
                })
            }

            const handleTareaCompletada = (status, taskId) => {
                console.log(status)
                console.log(taskId)
                
                fetch(`/tareas/${taskId}`, {
                 method:'PATCH',
                 headers: {
                     'Content-Type': 'Application/json'
                 },
                 body: JSON.stringify({
                     status: status
                 })   
                })
                .then(res => res.json())
                .then(data => {

                     if(data.status == 'ok' && data.completed) {
                         const tareas = document.querySelectorAll('.tarea-titulo')
                         tareas.forEach(tarea => {
                             if(tarea.dataset.id == taskId) {
                                tarea.style.textDecoration= 'line-through';
                                window.location.href = data.redirect
                             }
                         })
                     } else {
                        const tareas = document.querySelectorAll('.tarea-titulo')
                         tareas.forEach(tarea => {
                             if(tarea.dataset.id == taskId) {
                                tarea.style.textDecoration= '';
                                window.location.href = data.redirect
                             }
                         })
                     }

                })
            }

            document.getElementById('logout').addEventListener('click', () => {
                document.cookie = 'jwt=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;';
                window.location.href = '/login';
            });
        </script>
</body>

</html>